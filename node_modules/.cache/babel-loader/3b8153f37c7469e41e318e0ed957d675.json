{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Documents/deletar/src/App.js\";\nimport React, { useRef, useCallback } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nfunction App() {\n  const datePickerElement = useRef();\n  const datesElement = useRef();\n  const monthElement = useRef();\n  const nextMonthElement = useRef();\n  const prevMonthElement = useRef();\n  const daysElement = useRef();\n  const [months] = useState(['Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']);\n  const [date, setDate] = useState(state => {\n    let date = new Date();\n    return {\n      date,\n      day: date.getDate(),\n      month: date.getMonth(),\n      year: date.getFullYear()\n    };\n  });\n  let selectedDate = date.date;\n  let selectedDay = date.day;\n  let selectedMonth = date.month;\n  let selectedYear = date.year;\n  const formatDate = useCallback(date => {\n    let day = date.getDate();\n\n    if (day < 10) {\n      day = '0' + day;\n    }\n\n    let month = date.getMonth() + 1;\n\n    if (month < 10) {\n      month = '0' + month;\n    }\n\n    const year = date.getFullYear();\n    return `${day} / ${month} / ${year}`;\n  }, []);\n\n  const populateDates = () => {\n    let amountDays = 31;\n\n    if (date.month === 1) {\n      amountDays = 28;\n    }\n\n    let datesContainer = [];\n\n    for (let index = 0; index < amountDays; index++) {\n      const isSelectedDay = selectedDay === index + 1 && selectedMonth === date.month && selectedYear === date.selectedYear;\n      const selectedClass = \" \" + isSelectedDay ? 'selected' : '';\n      datesContainer.push(React.createElement(\"div\", {\n        className: `day ${selectedClass}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, index + 1));\n    }\n\n    return datesContainer;\n  };\n\n  const toggleDatePicker = useCallback(e => {\n    if (!e.target.closest('.dates')) {\n      datesElement.current.classList.toggle('active');\n    }\n  }, []);\n  const goToNextMonth = useCallback(event => {\n    setDate(state => {\n      const returnedDate = { ...state\n      };\n      returnedDate.month += 1;\n\n      if (returnedDate.month > 11) {\n        returnedDate.month = 0;\n        returnedDate.year += 1;\n      }\n\n      return returnedDate;\n    });\n  }, []);\n  const goToPrevMonth = useCallback(event => {\n    setDate(state => {\n      const returnedDate = { ...state\n      };\n      returnedDate.month -= 1;\n\n      if (returnedDate.month < 0) {\n        returnedDate.month = 11; // returnedDate.year -= 1;\n      }\n\n      return returnedDate;\n    });\n    monthElement.current.textContent = `${months[date.month]} ${date.year}`;\n  }, [date.month, date.year, months]);\n  useEffect(() => {\n    monthElement.current.textContent = `${months[date.month]} ${date.year}`;\n    datePickerElement.current.addEventListener('click', toggleDatePicker);\n    nextMonthElement.current.addEventListener('click', goToNextMonth);\n    prevMonthElement.current.addEventListener('click', goToPrevMonth);\n  }, [date.month, date.year, goToNextMonth, goToPrevMonth, months, toggleDatePicker]);\n  return React.createElement(\"div\", {\n    className: \"date-picker\",\n    ref: datePickerElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"selected-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"30/01/2020\"), React.createElement(\"div\", {\n    className: \"dates\",\n    ref: datesElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrows prev-month\",\n    ref: prevMonthElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"<\"), React.createElement(\"div\", {\n    className: \"label-month\",\n    ref: monthElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"February\"), React.createElement(\"div\", {\n    className: \"arrows next-month\",\n    ref: nextMonthElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \">\")), React.createElement(\"div\", {\n    className: \"days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, populateDates(), \";\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vitor/Documents/deletar/src/App.js"],"names":["React","useRef","useCallback","useEffect","useState","App","datePickerElement","datesElement","monthElement","nextMonthElement","prevMonthElement","daysElement","months","date","setDate","state","Date","day","getDate","month","getMonth","year","getFullYear","selectedDate","selectedDay","selectedMonth","selectedYear","formatDate","populateDates","amountDays","datesContainer","index","isSelectedDay","selectedClass","push","toggleDatePicker","e","target","closest","current","classList","toggle","goToNextMonth","event","returnedDate","goToPrevMonth","textContent","addEventListener"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nfunction App() {\n  const datePickerElement = useRef();\n  const datesElement = useRef();\n  const monthElement = useRef();\n  const nextMonthElement = useRef();\n  const prevMonthElement = useRef();\n  const daysElement = useRef();\n\n  const [months] = useState([\n    'Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\n  ])\n\n  const [date, setDate] = useState(state => {\n    let date = new Date();\n    return { date, day: date.getDate(), month: date.getMonth(), year: date.getFullYear() }\n  })\n\n  let selectedDate = date.date;\n  let selectedDay = date.day;\n  let selectedMonth = date.month;\n  let selectedYear = date.year;\n\n  const formatDate = useCallback(\n    (date) => {\n      let day = date.getDate();\n      if (day < 10) {\n        day = '0' + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = '0' + month;\n      }\n      const year = date.getFullYear();\n      return `${day} / ${month} / ${year}`;\n    },\n    [],\n  );\n\n  const populateDates = () => {\n    let amountDays = 31;\n    if (date.month === 1) {\n      amountDays = 28;\n    }\n\n    let datesContainer = [];\n    for (let index = 0; index < amountDays; index++) {\n      const isSelectedDay = (\n        selectedDay === (index + 1) &&\n        selectedMonth === date.month &&\n        selectedYear === date.selectedYear\n      );\n      const selectedClass = \" \" + isSelectedDay ? 'selected' : '';\n\n      datesContainer.push(<div className={`day ${selectedClass}`}>{index + 1}</div>);\n    }\n\n    return datesContainer;\n  }\n\n  const toggleDatePicker = useCallback(\n    (e) => {\n      if (!e.target.closest('.dates')) {\n        datesElement.current.classList.toggle('active')\n      }\n    },\n    [],\n  );\n\n  const goToNextMonth = useCallback(\n    (event) => {\n      setDate(state => {\n        const returnedDate = { ...state };\n        returnedDate.month += 1;\n        if (returnedDate.month > 11) {\n          returnedDate.month = 0;\n          returnedDate.year += 1;\n        }\n        return returnedDate;\n      })\n\n    },\n    [],\n  );\n\n  const goToPrevMonth = useCallback(\n    (event) => {\n      setDate(state => {\n        const returnedDate = { ...state };\n        returnedDate.month -= 1;\n        if (returnedDate.month < 0) {\n          returnedDate.month = 11;\n          // returnedDate.year -= 1;\n        }\n        return returnedDate;\n      })\n      monthElement.current.textContent = `${months[date.month]} ${date.year}`;\n    },\n    [date.month, date.year, months],\n  );\n\n  useEffect(() => {\n\n    monthElement.current.textContent = `${months[date.month]} ${date.year}`;\n    datePickerElement.current.addEventListener('click', toggleDatePicker);\n    nextMonthElement.current.addEventListener('click', goToNextMonth);\n    prevMonthElement.current.addEventListener('click', goToPrevMonth);\n  }, [date.month, date.year, goToNextMonth, goToPrevMonth, months, toggleDatePicker])\n\n  return (\n    <div className=\"date-picker\" ref={datePickerElement}>\n      <div className=\"selected-date\">30/01/2020</div>\n      <div className=\"dates\" ref={datesElement}>\n        <div className=\"month\">\n          <div className=\"arrows prev-month\" ref={prevMonthElement}>&lt;</div>\n          <div className=\"label-month\" ref={monthElement}>February</div>\n          <div className=\"arrows next-month\" ref={nextMonthElement}>&gt;</div>\n        </div>\n        <div className=\"days\">\n          {populateDates()};\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}