{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Documents/deletar/src/App.js\";\nimport React, { useRef, useCallback } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport moment from 'moment';\n\nfunction isLeap(year) {\n  return year % 4 || year % 100 && year % 400;\n}\n\nfunction App() {\n  const datePickerElement = useRef();\n  const datesElement = useRef();\n  const monthElement = useRef();\n  const nextMonthElement = useRef();\n  const prevMonthElement = useRef();\n  const daysElement = useRef();\n  const [months] = useState([{\n    name: 'Janeiro',\n    amountDays: 31,\n    isLeap: isLeap\n  }, {\n    name: 'Fevereiro',\n    amountDays: 28\n  }, {\n    name: 'MarÃ§o',\n    amountDays: 31,\n    isLeap: () => console.log()\n  }, {\n    name: 'Abril',\n    amountDays: 30,\n    isLeap: isLeap\n  }, {\n    name: 'Maio',\n    amountDays: 31,\n    isLeap: isLeap\n  }, {\n    name: 'Junho',\n    amountDays: 30,\n    isLeap: isLeap\n  }, {\n    name: 'Julho',\n    amountDays: 31,\n    isLeap: isLeap\n  }, {\n    name: 'Agosto',\n    amountDays: 31,\n    isLeap: isLeap\n  }, {\n    name: 'Setembro',\n    amountDays: 30,\n    isLeap: isLeap\n  }, {\n    name: 'Outubro',\n    amountDays: 31,\n    isLeap: isLeap\n  }, {\n    name: 'Novembro',\n    amountDays: 30,\n    isLeap: isLeap\n  }, {\n    name: 'Dezembro',\n    amountDays: 31,\n    isLeap: isLeap\n  }]);\n  const [date, setDate] = useState(state => {\n    let date = new Date();\n    return {\n      date,\n      day: date.getDate(),\n      month: date.getMonth(),\n      year: date.getFullYear()\n    };\n  });\n  let selectedDate = date.date;\n  let selectedDay = date.day;\n  let selectedMonth = date.month;\n  let selectedYear = date.year;\n  const formatDate = useCallback(date => {\n    let day = date.getDate();\n\n    if (day < 10) {\n      day = '0' + day;\n    }\n\n    let month = date.getMonth() + 1;\n\n    if (month < 10) {\n      month = '0' + month;\n    }\n\n    const year = date.getFullYear();\n    return `${day} / ${month} / ${year}`;\n  }, []);\n\n  const populateDates = () => {\n    const currentMonth = months[date.month];\n    console.log(currentMonth.isLeap);\n\n    if (currentMonth.isLeap(date.year)) {\n      currentMonth.amountDays = 29;\n    } else {\n      currentMonth.amountDays = 29;\n    }\n\n    const nextDateMonth = new Date(`${date.year}-${date.month + 2}-01 00:00`);\n    const lastDateMonth = new Date(`${date.year}-${date.month + 1}-01 00:00`);\n    nextDateMonth.setDate(nextDateMonth.getDate() - 1);\n    lastDateMonth.setDate(lastDateMonth.getDate() - 1);\n    let datesContainer = [];\n\n    for (let index = 0; index < lastDateMonth.getDay() + 1; index++) {\n      datesContainer.push(React.createElement(\"div\", {\n        key: index + Math.random(),\n        className: \"day another-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, lastDateMonth.getDate() + index - lastDateMonth.getDay()));\n    }\n\n    for (let index = 0; index < currentMonth.amountDays; index++) {\n      const isSelectedDay = selectedDay === index + 1 && selectedMonth === date.month && selectedYear === date.year;\n      const selectedClass = isSelectedDay ? 'selected' : '';\n      datesContainer.push(React.createElement(\"div\", {\n        key: index + Math.random(),\n        className: `day ${selectedClass}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, index + 1));\n    }\n\n    if (nextDateMonth.getDay() < 6) {\n      console.log(nextDateMonth.getDay() - 6, nextDateMonth);\n\n      for (let index = 0; index < Math.abs(nextDateMonth.getDay() - 6); index++) {\n        datesContainer.push(React.createElement(\"div\", {\n          key: index + Math.random(),\n          className: \"day another-day\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, index + 1));\n      }\n    }\n\n    return datesContainer;\n  };\n\n  const toggleDatePicker = useCallback(e => {\n    if (!e.target.closest('.dates')) {\n      datesElement.current.classList.toggle('active');\n    }\n  }, []);\n  const goToNextMonth = useCallback(event => {\n    setDate(state => {\n      const returnedDate = { ...state\n      };\n      returnedDate.month += 1;\n\n      if (returnedDate.month > 11) {\n        returnedDate.month = 0;\n        returnedDate.year += 1;\n      }\n\n      return returnedDate;\n    });\n  }, []);\n  const goToPrevMonth = useCallback(event => {\n    setDate(state => {\n      const returnedDate = { ...state\n      };\n      returnedDate.month -= 1;\n\n      if (returnedDate.month < 0) {\n        returnedDate.month = 11;\n        returnedDate.year -= 1;\n      }\n\n      return returnedDate;\n    });\n  }, []);\n  useEffect(() => {\n    monthElement.current.textContent = `${months[date.month].name} ${date.year}`;\n  }, [date.month, date.year, months]);\n  return React.createElement(\"div\", {\n    className: \"date-picker\",\n    ref: datePickerElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"selected-date\",\n    onClick: toggleDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"30/01/2020\"), React.createElement(\"div\", {\n    className: \"dates\",\n    ref: datesElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrows prev-month\",\n    ref: prevMonthElement,\n    onClick: goToPrevMonth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"<\"), React.createElement(\"div\", {\n    className: \"label-month\",\n    ref: monthElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"February\"), React.createElement(\"div\", {\n    className: \"arrows next-month\",\n    ref: nextMonthElement,\n    onClick: goToNextMonth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \">\")), React.createElement(\"div\", {\n    className: \"days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, populateDates())));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vitor/Documents/deletar/src/App.js"],"names":["React","useRef","useCallback","useEffect","useState","moment","isLeap","year","App","datePickerElement","datesElement","monthElement","nextMonthElement","prevMonthElement","daysElement","months","name","amountDays","console","log","date","setDate","state","Date","day","getDate","month","getMonth","getFullYear","selectedDate","selectedDay","selectedMonth","selectedYear","formatDate","populateDates","currentMonth","nextDateMonth","lastDateMonth","datesContainer","index","getDay","push","Math","random","isSelectedDay","selectedClass","abs","toggleDatePicker","e","target","closest","current","classList","toggle","goToNextMonth","event","returnedDate","goToPrevMonth","textContent"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport moment from 'moment';\n\n\nfunction isLeap(year) {\n  return year % 4 || (year % 100 && year % 400);\n}\n\nfunction App() {\n  const datePickerElement = useRef();\n  const datesElement = useRef();\n  const monthElement = useRef();\n  const nextMonthElement = useRef();\n  const prevMonthElement = useRef();\n  const daysElement = useRef();\n\n  const [months] = useState([\n    { name: 'Janeiro', amountDays: 31, isLeap: isLeap },\n    { name: 'Fevereiro', amountDays: 28 },\n    { name: 'MarÃ§o', amountDays: 31, isLeap: () => console.log() },\n    { name: 'Abril', amountDays: 30, isLeap: isLeap },\n    { name: 'Maio', amountDays: 31, isLeap: isLeap },\n    { name: 'Junho', amountDays: 30, isLeap: isLeap },\n    { name: 'Julho', amountDays: 31, isLeap: isLeap },\n    { name: 'Agosto', amountDays: 31, isLeap: isLeap },\n\n    { name: 'Setembro', amountDays: 30, isLeap: isLeap },\n    { name: 'Outubro', amountDays: 31, isLeap: isLeap },\n\n    { name: 'Novembro', amountDays: 30, isLeap: isLeap },\n    { name: 'Dezembro', amountDays: 31, isLeap: isLeap },\n  ])\n\n  const [date, setDate] = useState(state => {\n    let date = new Date();\n    return { date, day: date.getDate(), month: date.getMonth(), year: date.getFullYear() }\n  })\n\n  let selectedDate = date.date;\n  let selectedDay = date.day;\n  let selectedMonth = date.month;\n  let selectedYear = date.year;\n\n  const formatDate = useCallback(\n    (date) => {\n      let day = date.getDate();\n      if (day < 10) {\n        day = '0' + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = '0' + month;\n      }\n      const year = date.getFullYear();\n      return `${day} / ${month} / ${year}`;\n    },\n    [],\n  );\n\n\n\n  const populateDates = () => {\n    const currentMonth = months[date.month];\n    console.log(currentMonth.isLeap);\n    if (currentMonth.isLeap(date.year)) {\n      currentMonth.amountDays = 29\n    } else {\n      currentMonth.amountDays = 29\n    }\n\n    const nextDateMonth = new Date(`${date.year}-${date.month + 2}-01 00:00`);\n    const lastDateMonth = new Date(`${date.year}-${date.month + 1}-01 00:00`);\n    nextDateMonth.setDate(nextDateMonth.getDate() - 1);\n    lastDateMonth.setDate(lastDateMonth.getDate() - 1);\n\n\n    let datesContainer = [];\n    for (let index = 0; index < lastDateMonth.getDay() + 1; index++) {\n      datesContainer.push(<div key={index + Math.random()} className=\"day another-day\">{lastDateMonth.getDate() + index - lastDateMonth.getDay()}</div>)\n    }\n\n    for (let index = 0; index < currentMonth.amountDays; index++) {\n      const isSelectedDay = (\n        selectedDay === (index + 1) &&\n        selectedMonth === date.month &&\n        selectedYear === date.year\n      );\n      const selectedClass = isSelectedDay ? 'selected' : '';\n      datesContainer.push(<div key={index + Math.random()} className={`day ${selectedClass}`}>{index + 1}</div>);\n    }\n\n\n    if (nextDateMonth.getDay() < 6) {\n      console.log(nextDateMonth.getDay() - 6, nextDateMonth)\n      for (let index = 0; index < Math.abs(nextDateMonth.getDay() - 6); index++) {\n        datesContainer.push(<div key={index + Math.random()} className=\"day another-day\">{index + 1}</div>)\n      }\n    }\n\n\n\n    return datesContainer;\n  }\n\n  const toggleDatePicker = useCallback(\n    (e) => {\n      if (!e.target.closest('.dates')) {\n        datesElement.current.classList.toggle('active')\n      }\n    },\n    [],\n  );\n\n  const goToNextMonth = useCallback(\n    (event) => {\n      setDate(state => {\n        const returnedDate = { ...state };\n        returnedDate.month += 1;\n        if (returnedDate.month > 11) {\n          returnedDate.month = 0;\n          returnedDate.year += 1;\n        }\n        return returnedDate;\n      })\n\n    },\n    [],\n  );\n\n  const goToPrevMonth = useCallback(\n    (event) => {\n      setDate(state => {\n        const returnedDate = { ...state };\n        returnedDate.month -= 1;\n        if (returnedDate.month < 0) {\n          returnedDate.month = 11;\n          returnedDate.year -= 1;\n        }\n        return returnedDate;\n      })\n    },\n    [],\n  );\n\n  useEffect(() => {\n    monthElement.current.textContent = `${months[date.month].name} ${date.year}`;\n  }, [date.month, date.year, months])\n\n  return (\n    <div className=\"date-picker\" ref={datePickerElement}>\n      <div className=\"selected-date\" onClick={toggleDatePicker}>30/01/2020</div>\n      <div className=\"dates\" ref={datesElement}>\n        <div className=\"month\">\n          <div className=\"arrows prev-month\" ref={prevMonthElement} onClick={goToPrevMonth}>&lt;</div>\n          <div className=\"label-month\" ref={monthElement}>February</div>\n          <div className=\"arrows next-month\" ref={nextMonthElement} onClick={goToNextMonth}>&gt;</div>\n        </div>\n        <div className=\"days\">\n          {populateDates()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}