{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Documents/deletar/src/App.js\";\nimport React, { useRef, useCallback } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport moment from 'moment';\n\nfunction updateMonthCaseLeap(year) {\n  if (this.id !== 2) {\n    return;\n  }\n\n  if (year % 4 === 0 || year % 100 === 0 && year % 400 === 0) {\n    this.amountDays = 29;\n  } else {\n    this.amountDays = 28;\n  }\n\n  ;\n}\n\nfunction getPopulateDatesFromLastMonth(year, month) {\n  const lastMonthDate = new Date(`${year}-${month + 1}-01 00:00`);\n  lastMonthDate.setDate(lastMonthDate.getDate() - 1);\n  const container = [];\n\n  for (let index = 0; index < lastMonthDate.getDay() + 1; index++) {\n    container.push(React.createElement(\"div\", {\n      key: index + Math.random(),\n      className: \"day another-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, lastMonthDate.getDate() + index - lastMonthDate.getDay()));\n  }\n\n  return container;\n}\n\nfunction getPopulateDatesFromNextMonth(year, month) {\n  const nextMonthDate = new Date(`${year}-${month + 2}-01 00:00`);\n  nextMonthDate.setDate(nextMonthDate.getDate() - 1);\n  const container = [];\n\n  if (nextMonthDate.getDay() < 6) {\n    for (let index = 0; index < Math.abs(nextMonthDate.getDay() - 6); index++) {\n      container.push(React.createElement(\"div\", {\n        key: index + Math.random(),\n        className: \"day another-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, index + 1));\n    }\n  }\n\n  return container;\n}\n\nfunction App() {\n  const datesElement = useRef();\n  const monthElement = useRef();\n  const [months] = useState([{\n    id: 1,\n    name: 'Janeiro',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 2,\n    name: 'Fevereiro',\n    amountDays: 28,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 3,\n    name: 'MarÃ§o',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 4,\n    name: 'Abril',\n    amountDays: 30,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 5,\n    name: 'Maio',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 6,\n    name: 'Junho',\n    amountDays: 30,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 7,\n    name: 'Julho',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 8,\n    name: 'Agosto',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 9,\n    name: 'Setembro',\n    amountDays: 30,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 10,\n    name: 'Outubro',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 11,\n    name: 'Novembro',\n    amountDays: 30,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }, {\n    id: 12,\n    name: 'Dezembro',\n    amountDays: 31,\n    updateMonthCaseLeap: updateMonthCaseLeap\n  }]);\n  const [date, setDate] = useState(() => {\n    let date = new Date();\n    return {\n      date,\n      day: date.getDate(),\n      month: date.getMonth(),\n      year: date.getFullYear()\n    };\n  });\n  let selectedDate = date.date;\n  let selectedDay = date.day;\n  let selectedMonth = date.month;\n  let selectedYear = date.year;\n  const formatDate = useCallback(date => {\n    let day = date.getDate();\n\n    if (day < 10) {\n      day = '0' + day;\n    }\n\n    let month = date.getMonth() + 1;\n\n    if (month < 10) {\n      month = '0' + month;\n    }\n\n    const year = date.getFullYear();\n    return `${day} / ${month} / ${year}`;\n  }, []);\n\n  const populateDates = () => {\n    const currentMonth = months[date.month];\n    currentMonth.updateMonthCaseLeap(date.year);\n    let datesContainer = [...getPopulateDatesFromLastMonth(date.year, date.month)];\n\n    for (let index = 0; index < currentMonth.amountDays; index++) {\n      const isSelectedDay = selectedDay === index + 1 && selectedMonth === date.month && selectedYear === date.year;\n      const selectedClass = isSelectedDay ? 'selected' : '';\n      datesContainer.push(React.createElement(\"div\", {\n        key: index + Math.random(),\n        className: `day ${selectedClass}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, index + 1));\n    }\n\n    datesContainer = [...datesContainer, getPopulateDatesFromNextMonth(date.year, date.month)];\n    return datesContainer;\n  };\n\n  const toggleDatePicker = useCallback(e => {\n    if (!e.target.closest('.dates')) {\n      datesElement.current.classList.toggle('active');\n    }\n  }, []);\n  const goToNextMonth = useCallback(event => {\n    setDate(state => {\n      const returnedDate = { ...state\n      };\n      returnedDate.month += 1;\n\n      if (returnedDate.month > 11) {\n        returnedDate.month = 0;\n        returnedDate.year += 1;\n      }\n\n      return returnedDate;\n    });\n  }, []);\n  const goToPrevMonth = useCallback(event => {\n    setDate(state => {\n      const returnedDate = { ...state\n      };\n      returnedDate.month -= 1;\n\n      if (returnedDate.month < 0) {\n        returnedDate.month = 11;\n        returnedDate.year -= 1;\n      }\n\n      return returnedDate;\n    });\n  }, []);\n  useEffect(() => {\n    window.addEventListener('click');\n  }, []);\n  useEffect(() => {\n    monthElement.current.textContent = `${months[date.month].name} ${date.year}`;\n  }, [date.month, date.year, months]);\n  return React.createElement(\"div\", {\n    className: \"date-picker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"selected-date\",\n    onClick: toggleDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"30/01/2020\"), React.createElement(\"div\", {\n    className: \"dates\",\n    ref: datesElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrows prev-month\",\n    onClick: goToPrevMonth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"<\"), React.createElement(\"div\", {\n    className: \"label-month\",\n    ref: monthElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"arrows next-month\",\n    onClick: goToNextMonth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \">\")), React.createElement(\"div\", {\n    className: \"days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, populateDates())));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vitor/Documents/deletar/src/App.js"],"names":["React","useRef","useCallback","useEffect","useState","moment","updateMonthCaseLeap","year","id","amountDays","getPopulateDatesFromLastMonth","month","lastMonthDate","Date","setDate","getDate","container","index","getDay","push","Math","random","getPopulateDatesFromNextMonth","nextMonthDate","abs","App","datesElement","monthElement","months","name","date","day","getMonth","getFullYear","selectedDate","selectedDay","selectedMonth","selectedYear","formatDate","populateDates","currentMonth","datesContainer","isSelectedDay","selectedClass","toggleDatePicker","e","target","closest","current","classList","toggle","goToNextMonth","event","state","returnedDate","goToPrevMonth","window","addEventListener","textContent"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport moment from 'moment';\n\n\nfunction updateMonthCaseLeap(year) {\n  if (this.id !== 2) {\n    return;\n  }\n  if (year % 4 === 0 || (year % 100 === 0 && year % 400 === 0)) {\n    this.amountDays = 29;\n  } else {\n    this.amountDays = 28;\n  };\n}\n\nfunction getPopulateDatesFromLastMonth(year, month) {\n  const lastMonthDate = new Date(`${year}-${month + 1}-01 00:00`);\n  lastMonthDate.setDate(lastMonthDate.getDate() - 1);\n\n  const container = [];\n  for (let index = 0; index < lastMonthDate.getDay() + 1; index++) {\n    container.push(<div key={index + Math.random()} className=\"day another-day\">{lastMonthDate.getDate() + index - lastMonthDate.getDay()}</div>)\n  }\n  return container;\n}\n\nfunction getPopulateDatesFromNextMonth(year, month) {\n  const nextMonthDate = new Date(`${year}-${month + 2}-01 00:00`);\n  nextMonthDate.setDate(nextMonthDate.getDate() - 1);\n\n  const container = [];\n  if (nextMonthDate.getDay() < 6) {\n    for (let index = 0; index < Math.abs(nextMonthDate.getDay() - 6); index++) {\n      container.push(<div key={index + Math.random()} className=\"day another-day\">{index + 1}</div>)\n    }\n  }\n  return container;\n}\n\nfunction App() {\n  const datesElement = useRef();\n  const monthElement = useRef();\n\n  const [months] = useState([\n    { id: 1, name: 'Janeiro', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 2, name: 'Fevereiro', amountDays: 28, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 3, name: 'MarÃ§o', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 4, name: 'Abril', amountDays: 30, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 5, name: 'Maio', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 6, name: 'Junho', amountDays: 30, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 7, name: 'Julho', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 8, name: 'Agosto', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 9, name: 'Setembro', amountDays: 30, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 10, name: 'Outubro', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 11, name: 'Novembro', amountDays: 30, updateMonthCaseLeap: updateMonthCaseLeap },\n    { id: 12, name: 'Dezembro', amountDays: 31, updateMonthCaseLeap: updateMonthCaseLeap },\n  ])\n\n  const [date, setDate] = useState(() => {\n    let date = new Date();\n    return { date, day: date.getDate(), month: date.getMonth(), year: date.getFullYear() }\n  })\n\n  let selectedDate = date.date;\n  let selectedDay = date.day;\n  let selectedMonth = date.month;\n  let selectedYear = date.year;\n\n  const formatDate = useCallback(\n    (date) => {\n      let day = date.getDate();\n      if (day < 10) {\n        day = '0' + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = '0' + month;\n      }\n      const year = date.getFullYear();\n      return `${day} / ${month} / ${year}`;\n    },\n    [],\n  );\n\n  const populateDates = () => {\n    const currentMonth = months[date.month];\n    currentMonth.updateMonthCaseLeap(date.year);\n\n    let datesContainer = [...getPopulateDatesFromLastMonth(date.year, date.month)];\n\n\n    for (let index = 0; index < currentMonth.amountDays; index++) {\n      const isSelectedDay = (\n        selectedDay === (index + 1) &&\n        selectedMonth === date.month &&\n        selectedYear === date.year\n      );\n      const selectedClass = isSelectedDay ? 'selected' : '';\n      datesContainer.push(<div key={index + Math.random()} className={`day ${selectedClass}`}>{index + 1}</div>);\n    }\n\n\n    datesContainer = [...datesContainer, getPopulateDatesFromNextMonth(date.year, date.month)]\n\n\n\n    return datesContainer;\n  }\n\n  const toggleDatePicker = useCallback(\n    (e) => {\n      if (!e.target.closest('.dates')) {\n        datesElement.current.classList.toggle('active')\n      }\n    },\n    [],\n  );\n\n  const goToNextMonth = useCallback(\n    (event) => {\n      setDate(state => {\n        const returnedDate = { ...state };\n        returnedDate.month += 1;\n        if (returnedDate.month > 11) {\n          returnedDate.month = 0;\n          returnedDate.year += 1;\n        }\n        return returnedDate;\n      })\n\n    },\n    [],\n  );\n\n  const goToPrevMonth = useCallback(\n    (event) => {\n      setDate(state => {\n        const returnedDate = { ...state };\n        returnedDate.month -= 1;\n        if (returnedDate.month < 0) {\n          returnedDate.month = 11;\n          returnedDate.year -= 1;\n        }\n        return returnedDate;\n      })\n    },\n    [],\n  );\n\n  useEffect(() => {\n    window.addEventListener('click')\n  }, [])\n\n  useEffect(() => {\n    monthElement.current.textContent = `${months[date.month].name} ${date.year}`;\n  }, [date.month, date.year, months])\n\n  return (\n    <div className=\"date-picker\">\n      <div className=\"selected-date\" onClick={toggleDatePicker}>30/01/2020</div>\n      <div className=\"dates\" ref={datesElement}>\n        <div className=\"month\">\n          <div className=\"arrows prev-month\" onClick={goToPrevMonth}>&lt;</div>\n          <div className=\"label-month\" ref={monthElement}></div>\n          <div className=\"arrows next-month\" onClick={goToNextMonth}>&gt;</div>\n        </div>\n        <div className=\"days\">\n          {populateDates()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}